<!-- Links the page to the chosen Google Fonts -->
<head>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Gabriela&family=VT323&display=swap" rel="stylesheet">
</head>

<!-- Links the page to the custom CSS -->
<head>
<link href="www/styles.css" rel="stylesheet">
</head>

```{r global, echo=FALSE, warning=FALSE, message=FALSE}

# Loads libraries and defines chunks defaults
library(dplyr)
library(ggplot2)
library(ggpath)
library(ggiraph)
library(ggforce)
library(glue)
library(stringr)
library(htmltools)

knitr::opts_chunk$set(
  echo=FALSE
)

```

<!-- Create containers for the background images and the content -->
<div id="bkg_container"><div id="mega_container">

<!-- Create containers for the background images and the content -->
<div id="top_title">WHERE</div>
<div id="middle_title">IN THE WORLD IS</div>
<div id="bottom_title">Carmen Sandiego?</div>

<!-- Places the first message -->
<img src="www/detective.png" class="detective">
```{r}

## Define the location (spaces as underlines, lowercase)
loc <- "budapest"

## Defines the clue
clue <- "that they are in the Land of the Magyars."

## Defines the message
div(class="msg",
    'Welcome to ACME, Detective! We recruited you because of your worldly
    knowledge and investigative skills. The sole purpose of our Agency is to
    monitor and catch evildoers. We believe that Carmen Sandiego; a.k.a.',
    span(id="aka1", 'La Femme Rouge,'),
    'a.k.a. ',
    span(id="aka2", 'the Crimson Phantom;'),
    'is the leader of an organization that targets national treasures
    around the globe. Their usual targets are in the map bellow. Can you
    discover where their agent might be? The only thing we know for know is ',
    span(class="clue", clue),
)

```

<div style="clear:both;"></div>

```{r}

## Defines locations, tooltips and names on the map
cities <- tibble(
  name = c("MEXICO CITY","LONDON","MOSCOW",
           "ISTANBUL","BAGHDAD","TOKYO",
           "PORT MORESBY","NEW DELHI","BUENOS AIRES",
           "SYDNEY","CITY OF SAN MARINO","SINGAPORE",
           "ROME","REYKJAVIK","PEKING",
           "MONTREAL","LIMA","NEW YORK",
           "PARIS","COLOMBO","BUDAPEST",
           "KATHMANDU","BANGKOK","CAIRO",
           "ATHENS","RIO DE JANEIRO","KIGALI",
           "BAMAKO","MORONI","OSLO"),
  x = c(-0.65,-0.01,0.23,
        0.19,0.26,0.87,
        0.91,0.45,-0.38,
        0.92,0.08,0.65,
        0.10,-0.16,0.72,
        -0.48,-0.49,-0.48,
        0.02,0.50,0.14,
        0.53,0.60,0.20,
        0.15,-0.27,0.19,
        -0.04,0.26,0.05),
  y = c(0.10,0.65,0.70,
        0.35,0.20,0.29,
        -0.30,0.19,-0.64,
        -0.71,0.41,-0.21,
        0.35,0.86,0.38,
        0.55,-0.26,0.43,
        0.53,-0.07,0.48,
        0.25,-0.01,0.20,
        0.33,-0.43,-0.18,
        -0.01,-0.32,0.80)
) %>% 
  dplyr::mutate(tip = tolower(name),
                tip = stringr::str_replace_all(tip, " ", "_"),
                tip = glue::glue("<img style='border-radius:40px;' width='500px' height='540px' src='www/cities/{tip}.png'>")) %>% 
  dplyr::mutate(xt = x - 0.037*stringr::str_length(name) - 0.036,
                yt = y + 0.022)

## Defines the target city
cities <- cities %>% 
  dplyr::mutate(tip = stringr::str_replace(tip, loc, glue::glue("{loc}_vile")))

## Places the map with the interactive text and points
world <- cities %>% 
  ggplot() +
  ggpath::geom_from_path(aes(x = 0, y = 0, path = "www/world.png")) +
  ggiraph::geom_point_interactive(aes(x = x, y = y, tooltip = tip, data_id = name),
                                  shape = 22, fill = "#ffff55", color = "black", stroke = 1) +
  ggiraph::geom_text_interactive(aes(x = xt, y = yt, label = name, data_id = name),
                                 alpha = 0, family = "VT323", size = 6.5, hjust = 0) +
  coord_equal(xlim = c(-1,1), ylim = c(-1,1), ratio = 0.4) +
  theme_void()

## Enables and configures interactivity
ggiraph::girafe(
  ggobj = world,
  height_svg = 2.9,
  options = list(
    opts_tooltip(
      css = "background-color:transparent;",
      opacity = 1,
    ),
    opts_hover(
      css = girafe_css(
        css = "fill:#ffff55;",
        text = "stroke:black;stroke-width:0.5;fill:#ffff55;"
      )
    )
  )
)

```

<!-- Places the second message -->
<img src="www/detective.png" class="detective">
```{r}

## Defines the message
div(class="msg",
    "We know were they are, but we still don't know",
    strong("WHO"),"they are. It's fundamental that you
    go around the city and interview people. They may
    have seen someone suspicious and will give you
    some traits that you can compare to our files 
    on the Carmen Sandiego's crew."
)

```

<div style="clear:both;"></div>

```{r}

## Defines radius and angles
r <- 0.75
a <- seq(0, (11/12)*2, length.out = 12)

## Gets the names of the files
places <- list.files("www/wrapped") %>% 
  stringr::str_subset("_person", negate = TRUE)
people <- list.files("www/wrapped") %>% 
  stringr::str_subset("_person")

## Defines the clues about the suspect
clues_people <- c(
  "She took off to the city in a yellow convertible",
  "I saw no one suspicious these days",
  "She eagerly talked about having tickets to a Grand Slam match",
  "I didn't see anyone that matches this description",
  "She arrived in a beautiful mustard convertible",
  "When her hat was off, I saw that her hair had a reddish tone",
  "She was frantically looking for a Mexican food truck",
  "Never heard of someone like this",
  "She had a incredible jewel in her person",
  "She had a taco stain in her coat",
  "She said that she was a fan of Gustavo Kuerten",
  "Her ruby necklace was very shiny"
)

## Defines coordinates of the locations and the tooltips
investigate <- tibble(
  path = places,
  person = people,
  x = r*cospi(a),
  y = r*sinpi(a),
  clue = clues_people
) %>% 
  dplyr::mutate(name = toupper(path),
                name = stringr::str_replace_all(name, "_", " "),
                name = stringr::str_remove(name, ".PNG"),
                path = glue::glue("www/wrapped/{path}")) %>% 
  dplyr::mutate(xt = x - 0.019*stringr::str_length(name) - 0.007,
                yt = y - 0.16) %>% 
  dplyr::mutate(tip = glue::glue("www/wrapped/{person}"),
                tip = glue::glue("<img class='person' src='{tip}'><img class='tri' src='www/trispeech.png'><div class='clue_person'>{clue}</div>"))

## Places the locations
locations <- investigate %>% 
  ggplot() +
  ggforce::geom_ellipse(aes(x0 = 0, y0 = 0, a = 1.1, b = 1, angle = 0),
               fill = "#F7EEB0", color = NA) +
  geom_point(aes(x = 0, y = 0), size = 60, color = "white") +
  ggpath::geom_from_path(aes(x = 0, y = 0, path = "www/magglass.png"),
                         width = 0.3, height = 0.3) +
  ggpath::geom_from_path(aes(x = x, y = y, path = path),
                         width = 0.1, height = 0.1) +
  ggiraph::geom_tile_interactive(aes(x = x, y = y, tooltip = tip, data_id = name),
                                 width = 0.2, height = 0.2, alpha = 0.01) +
  ggiraph::geom_text_interactive(aes(x = xt, y = yt, label = name, data_id = name),
                                 alpha = 0, family = "VT323", size = 6, hjust = 0,
                                 vjust = 0) +
  coord_equal(xlim = c(-1,1), ylim = c(-1,1), ratio = 0.8) +
  theme_void()

## Enables and configures interactivity
ggiraph::girafe(
  ggobj = locations,
  height_svg = 4,
  width_svg = 5,
  options = list(
    opts_tooltip(
      css = "background-color:black;border-radius:20px;",
      opacity = 1, offx = 30, offy = -190
    ),
    opts_hover(
      css = girafe_css(
        css = "fill:#ffff55;",
        text = "stroke:black;stroke-width:0.5;fill:#ffff55;"
      )
    )
  )
)

```









</div></div>

<!-- Places the fax image at the bottom -->
<img src="www/fax.png" width="100%">